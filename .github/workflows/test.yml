name: api-build

on:
  push:
    paths:
      - ".github/workflows/api-build.yml"
      - "pom.xml"
      - "src/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # 启动数据库服务（GitHub Actions 的 service 容器）
    services:
      postgres:                                          # 服务的名字（自取）。日志里会看到 service 'postgres' started
        image: postgres:16                               # 要拉取并运行的镜像版本
        env:                                             # 传给容器的环境变量（由官方镜像读取）
          POSTGRES_DB: nitereGitAction                   # 启动时自动创建这个数据库
          POSTGRES_USER: postgres                        # 超级用户/登录用户
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}  # 在仓库 Settings → Secrets 新建
        ports:
          - 5432:5432
        options: >-                                      # 额外的 docker run 参数（这里设置了健康检查）
          --health-cmd="pg_isready -U postgres -d nitereGitAction"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Build (use Postgres service)
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/nitereGitAction
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.PG_PASSWORD }}
          SPRING_MAIN_WEB_APPLICATION_TYPE: none   # 测试时不启Web服务器，避免端口问题
        run: |
          mvn -B -ntp clean verify

      # 失败时把 surefire 报告打印出来，便于排错
      - name: Dump surefire reports on failure
        if: failure()
        run: |
          echo "---- surefire-reports ----"
          ls -al target/surefire-reports || true
          for f in target/surefire-reports/*.txt; do echo ">>> $f"; cat "$f"; echo; done

      - name: Upload JAR
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: |
            target/*.jar
            !target/*-sources.jar
            !target/*-javadoc.jar
